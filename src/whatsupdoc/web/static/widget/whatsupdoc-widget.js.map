{"version":3,"file":"whatsupdoc-widget.js","sources":["../../widget/src/whatsupdoc-widget.js"],"sourcesContent":["/**\n * WhatsUpDoc Embeddable Chat Widget\n * \n * A modern, responsive chat widget that can be embedded on any website.\n * Uses Shadow DOM for style isolation and connects to the WhatsUpDoc RAG API.\n * \n * Usage:\n * <script src=\"https://your-domain.com/static/widget/whatsupdoc-widget.js\"></script>\n * <div id=\"whatsupdoc-widget\" \n *      data-api-url=\"https://your-api.com\"\n *      data-theme=\"light\"\n *      data-position=\"bottom-right\">\n * </div>\n */\n\nclass WhatsUpDocWidget extends HTMLElement {\n  constructor() {\n    super();\n    \n    // Create shadow DOM for style isolation\n    this.attachShadow({ mode: 'open' });\n    \n    // Widget state\n    this.isOpen = false;\n    this.isLoading = false;\n    this.conversationId = this.generateUUID();\n    this.messages = [];\n    \n    // Config will be loaded in connectedCallback after attributes are set\n    this.config = null;\n  }\n  \n  connectedCallback() {\n    // Widget is added to DOM - load config and initialize\n    this.loadConfig();\n    this.init();\n  }\n  \n  loadConfig() {\n    // Configuration from data attributes - read after element is connected\n    console.log('Loading config for WhatsUpDoc Widget...');\n    console.log('Widget element attributes:', Array.from(this.attributes).map(attr => ({ name: attr.name, value: attr.value })));\n    console.log('data-api-url attribute value:', this.getAttribute('data-api-url'));\n    console.log('window.location.origin:', window.location.origin);\n    \n    // Primary config loading from widget attributes\n    let apiUrl = this.getAttribute('data-api-url');\n    let theme = this.getAttribute('data-theme');\n    let position = this.getAttribute('data-position');\n    let title = this.getAttribute('data-title');\n    let placeholder = this.getAttribute('data-placeholder');\n    let primaryColor = this.getAttribute('data-primary-color');\n    \n    // Fallback: if attributes are missing, try to read from the original container\n    if (!apiUrl) {\n      console.log('Widget missing data-api-url, checking original container...');\n      const container = document.getElementById('whatsupdoc-widget');\n      if (container) {\n        apiUrl = container.getAttribute('data-api-url');\n        theme = theme || container.getAttribute('data-theme');\n        position = position || container.getAttribute('data-position');\n        title = title || container.getAttribute('data-title');\n        placeholder = placeholder || container.getAttribute('data-placeholder');\n        primaryColor = primaryColor || container.getAttribute('data-primary-color');\n        console.log('Fallback data-api-url from container:', apiUrl);\n      }\n    }\n    \n    this.config = {\n      apiUrl: apiUrl || this.getDefaultApiUrl(),\n      theme: theme || 'light',\n      position: position || 'bottom-right',\n      title: title || 'Ask WhatsUpDoc',\n      placeholder: placeholder || 'Ask me anything...',\n      primaryColor: primaryColor || '#3B82F6'\n    };\n    \n    // Additional validation to catch issues\n    if (!this.config.apiUrl) {\n      console.error('CRITICAL ERROR: No API URL configured!');\n      console.error('apiUrl variable:', apiUrl);\n      console.error('getDefaultApiUrl() returned:', this.getDefaultApiUrl());\n      throw new Error('Widget configuration failed: No API URL specified');\n    }\n    \n    console.log('WhatsUpDoc Widget config loaded:', this.config);\n    \n    // Validation: warn if API URL looks wrong\n    if (this.config.apiUrl === window.location.origin && window.location.hostname.includes('storage.googleapis.com')) {\n      console.error('ERROR: Widget is using GCS storage URL as API endpoint. This will not work!');\n      console.error('Expected: A proper API URL like https://your-api.com');\n      console.error('Actual:', this.config.apiUrl);\n      console.error('Please check that data-api-url attribute is set correctly on the widget container.');\n    }\n  }\n  \n  getDefaultApiUrl() {\n    // Intelligent default API URL selection\n    // Never use storage.googleapis.com as an API URL\n    if (window.location.hostname.includes('storage.googleapis.com')) {\n      console.warn('Cannot use storage.googleapis.com as API URL. Please set data-api-url attribute.');\n      return null; // This will cause an error, which is better than a silent failure\n    }\n    return window.location.origin;\n  }\n  \n  disconnectedCallback() {\n    // Cleanup when widget is removed\n    this.cleanup();\n  }\n  \n  init() {\n    try {\n      // Create the widget HTML structure\n      this.shadowRoot.innerHTML = this.getHTML();\n      \n      // Apply styles\n      this.applyStyles();\n      \n      // Set up event listeners after DOM is ready\n      setTimeout(() => this.setupEventListeners(), 0);\n      \n      // Load conversation history from localStorage\n      this.loadConversationHistory();\n    } catch (error) {\n      console.error('WhatsUpDoc Widget initialization failed:', error);\n      this.showInitializationError();\n    }\n  }\n  \n  showInitializationError() {\n    this.shadowRoot.innerHTML = `\n      <div style=\"\n        position: fixed;\n        bottom: 24px;\n        right: 24px;\n        background: #fee2e2;\n        border: 1px solid #fecaca;\n        color: #dc2626;\n        padding: 12px 16px;\n        border-radius: 8px;\n        font-family: system-ui, sans-serif;\n        font-size: 14px;\n        z-index: 999999;\n        max-width: 300px;\n      \">\n        ‚ö†Ô∏è WhatsUpDoc widget failed to load. Please check the console for details.\n      </div>\n    `;\n  }\n  \n  getHTML() {\n    return `\n      <div class=\"whatsupdoc-widget\" data-theme=\"${this.config.theme}\">\n        <!-- Floating Action Button -->\n        <div class=\"fab-container ${this.config.position}\">\n          <button class=\"fab\" id=\"fab-button\" aria-label=\"Open chat\">\n            <svg class=\"fab-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n              <path d=\"m3 21 1.9-5.7a8.5 8.5 0 1 1 3.8 3.8z\"></path>\n            </svg>\n            <span class=\"fab-badge\" id=\"fab-badge\" style=\"display: none;\">1</span>\n          </button>\n        </div>\n        \n        <!-- Chat Window -->\n        <div class=\"chat-window ${this.config.position}\" id=\"chat-window\" style=\"display: none;\">\n          <div class=\"chat-header\">\n            <div class=\"chat-header-content\">\n              <h3 class=\"chat-title\">${this.config.title}</h3>\n              <div class=\"chat-status\" id=\"chat-status\">Ready</div>\n            </div>\n            <button class=\"close-button\" id=\"close-button\" aria-label=\"Close chat\">\n              <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n              </svg>\n            </button>\n          </div>\n          \n          <div class=\"chat-messages\" id=\"chat-messages\">\n            <div class=\"welcome-message\">\n              <div class=\"message bot-message\">\n                <div class=\"message-content\">\n                  <p>üëã Hi! I'm your AI assistant. I can help you find information from our knowledge base. What would you like to know?</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"chat-input-container\">\n            <div class=\"typing-indicator\" id=\"typing-indicator\" style=\"display: none;\">\n              <div class=\"typing-dots\">\n                <span></span>\n                <span></span>\n                <span></span>\n              </div>\n              <span class=\"typing-text\">AI is thinking...</span>\n            </div>\n            \n            <form class=\"chat-input-form\" id=\"chat-form\">\n              <div class=\"input-wrapper\">\n                <input \n                  type=\"text\" \n                  class=\"chat-input\" \n                  id=\"chat-input\" \n                  placeholder=\"${this.config.placeholder}\"\n                  maxlength=\"5000\"\n                  autocomplete=\"off\"\n                />\n                <button type=\"submit\" class=\"send-button\" id=\"send-button\" aria-label=\"Send message\">\n                  <svg class=\"send-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                    <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line>\n                    <polygon points=\"22,2 15,22 11,13 2,9\"></polygon>\n                  </svg>\n                </button>\n              </div>\n              \n              <div class=\"rate-limit-warning\" id=\"rate-limit-warning\" style=\"display: none;\">\n                <small>Rate limit exceeded. Please wait before sending another message.</small>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n  \n  applyStyles() {\n    const style = document.createElement('style');\n    style.textContent = this.getCSS();\n    this.shadowRoot.appendChild(style);\n  }\n  \n  getCSS() {\n    return `\n      /* CSS Variables for theming */\n      .whatsupdoc-widget {\n        --primary-color: ${this.config.primaryColor};\n        --primary-hover: ${this.adjustColor(this.config.primaryColor, -10)};\n        --background: ${this.config.theme === 'dark' ? '#1f2937' : '#ffffff'};\n        --surface: ${this.config.theme === 'dark' ? '#374151' : '#f9fafb'};\n        --text-primary: ${this.config.theme === 'dark' ? '#f9fafb' : '#111827'};\n        --text-secondary: ${this.config.theme === 'dark' ? '#d1d5db' : '#6b7280'};\n        --border: ${this.config.theme === 'dark' ? '#4b5563' : '#e5e7eb'};\n        --shadow: ${this.config.theme === 'dark' ? '0 10px 25px rgba(0, 0, 0, 0.3)' : '0 10px 25px rgba(0, 0, 0, 0.1)'};\n        --shadow-lg: ${this.config.theme === 'dark' ? '0 25px 50px rgba(0, 0, 0, 0.4)' : '0 25px 50px rgba(0, 0, 0, 0.15)'};\n      }\n      \n      * {\n        box-sizing: border-box;\n        margin: 0;\n        padding: 0;\n      }\n      \n      .whatsupdoc-widget {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\n        font-size: 14px;\n        line-height: 1.5;\n        color: var(--text-primary);\n        position: fixed;\n        z-index: 999999;\n        isolation: isolate;\n      }\n      \n      /* Floating Action Button */\n      .fab-container {\n        position: fixed;\n        z-index: 1000001;\n      }\n      \n      .fab-container.bottom-right {\n        bottom: 24px;\n        right: 24px;\n      }\n      \n      .fab-container.bottom-left {\n        bottom: 24px;\n        left: 24px;\n      }\n      \n      .fab {\n        width: 60px;\n        height: 60px;\n        border-radius: 50%;\n        background: var(--primary-color);\n        border: none;\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        box-shadow: var(--shadow-lg);\n        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n        position: relative;\n        color: white;\n      }\n      \n      .fab:hover {\n        background: var(--primary-hover);\n        transform: scale(1.05);\n        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);\n      }\n      \n      .fab:active {\n        transform: scale(0.95);\n      }\n      \n      .fab-icon {\n        width: 24px;\n        height: 24px;\n        transition: transform 0.3s ease;\n      }\n      \n      .fab.open .fab-icon {\n        transform: rotate(45deg);\n      }\n      \n      .fab-badge {\n        position: absolute;\n        top: -8px;\n        right: -8px;\n        background: #ef4444;\n        color: white;\n        border-radius: 12px;\n        padding: 4px 8px;\n        font-size: 12px;\n        font-weight: 600;\n        min-width: 20px;\n        text-align: center;\n        animation: pulse 2s infinite;\n      }\n      \n      @keyframes pulse {\n        0%, 100% { transform: scale(1); }\n        50% { transform: scale(1.1); }\n      }\n      \n      /* Chat Window */\n      .chat-window {\n        position: fixed;\n        width: 380px;\n        height: 600px;\n        max-height: calc(100vh - 120px);\n        background: var(--background);\n        border-radius: 16px;\n        box-shadow: var(--shadow-lg);\n        display: flex;\n        flex-direction: column;\n        z-index: 1000000;\n        backdrop-filter: blur(10px);\n        border: 1px solid var(--border);\n        animation: slideIn 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      }\n      \n      .chat-window.bottom-right {\n        bottom: 100px;\n        right: 24px;\n      }\n      \n      .chat-window.bottom-left {\n        bottom: 100px;\n        left: 24px;\n      }\n      \n      @keyframes slideIn {\n        from {\n          opacity: 0;\n          transform: translateY(20px) scale(0.95);\n        }\n        to {\n          opacity: 1;\n          transform: translateY(0) scale(1);\n        }\n      }\n      \n      /* Chat Header */\n      .chat-header {\n        padding: 20px;\n        border-bottom: 1px solid var(--border);\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        background: var(--surface);\n        border-radius: 16px 16px 0 0;\n      }\n      \n      .chat-header-content {\n        flex: 1;\n      }\n      \n      .chat-title {\n        font-size: 18px;\n        font-weight: 600;\n        color: var(--text-primary);\n        margin: 0;\n      }\n      \n      .chat-status {\n        font-size: 12px;\n        color: var(--text-secondary);\n        margin-top: 4px;\n      }\n      \n      .close-button {\n        width: 32px;\n        height: 32px;\n        border: none;\n        background: none;\n        cursor: pointer;\n        border-radius: 8px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        color: var(--text-secondary);\n        transition: all 0.2s ease;\n      }\n      \n      .close-button:hover {\n        background: var(--border);\n        color: var(--text-primary);\n      }\n      \n      .close-button svg {\n        width: 18px;\n        height: 18px;\n      }\n      \n      /* Messages Area */\n      .chat-messages {\n        flex: 1;\n        overflow-y: auto;\n        padding: 20px;\n        display: flex;\n        flex-direction: column;\n        gap: 16px;\n      }\n      \n      .chat-messages::-webkit-scrollbar {\n        width: 4px;\n      }\n      \n      .chat-messages::-webkit-scrollbar-track {\n        background: transparent;\n      }\n      \n      .chat-messages::-webkit-scrollbar-thumb {\n        background: var(--border);\n        border-radius: 2px;\n      }\n      \n      .message {\n        display: flex;\n        gap: 12px;\n        max-width: 85%;\n        animation: messageSlideIn 0.3s ease-out;\n      }\n      \n      .message.user-message {\n        align-self: flex-end;\n        flex-direction: row-reverse;\n      }\n      \n      .message.bot-message {\n        align-self: flex-start;\n      }\n      \n      @keyframes messageSlideIn {\n        from {\n          opacity: 0;\n          transform: translateY(10px);\n        }\n        to {\n          opacity: 1;\n          transform: translateY(0);\n        }\n      }\n      \n      .message-avatar {\n        width: 32px;\n        height: 32px;\n        border-radius: 50%;\n        background: var(--primary-color);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        color: white;\n        font-weight: 600;\n        font-size: 12px;\n        flex-shrink: 0;\n      }\n      \n      .user-message .message-avatar {\n        background: var(--text-secondary);\n      }\n      \n      .message-content {\n        background: var(--surface);\n        padding: 12px 16px;\n        border-radius: 18px;\n        border: 1px solid var(--border);\n        position: relative;\n      }\n      \n      .user-message .message-content {\n        background: var(--primary-color);\n        color: white;\n        border: none;\n      }\n      \n      .message-content p {\n        margin: 0;\n        word-wrap: break-word;\n      }\n      \n      .message-content pre {\n        background: rgba(0, 0, 0, 0.1);\n        padding: 8px;\n        border-radius: 6px;\n        margin: 8px 0;\n        overflow-x: auto;\n        font-size: 13px;\n      }\n      \n      .message-content code {\n        background: rgba(0, 0, 0, 0.1);\n        padding: 2px 4px;\n        border-radius: 3px;\n        font-size: 13px;\n      }\n      \n      .message-sources {\n        margin-top: 8px;\n        padding-top: 8px;\n        border-top: 1px solid var(--border);\n        font-size: 12px;\n        color: var(--text-secondary);\n      }\n      \n      .message-sources strong {\n        display: block;\n        margin-bottom: 4px;\n      }\n      \n      .source-link {\n        color: var(--primary-color);\n        text-decoration: none;\n        display: block;\n        margin: 2px 0;\n      }\n      \n      .source-link:hover {\n        text-decoration: underline;\n      }\n      \n      .message-timestamp {\n        font-size: 11px;\n        color: var(--text-secondary);\n        margin-top: 4px;\n        opacity: 0.7;\n      }\n      \n      /* Input Area */\n      .chat-input-container {\n        padding: 20px;\n        border-top: 1px solid var(--border);\n        background: var(--background);\n        border-radius: 0 0 16px 16px;\n      }\n      \n      .typing-indicator {\n        display: flex;\n        align-items: center;\n        gap: 8px;\n        padding: 8px 0;\n        color: var(--text-secondary);\n        font-size: 13px;\n      }\n      \n      .typing-dots {\n        display: flex;\n        gap: 4px;\n      }\n      \n      .typing-dots span {\n        width: 6px;\n        height: 6px;\n        background: var(--text-secondary);\n        border-radius: 50%;\n        animation: typingBounce 1.4s infinite ease-in-out;\n      }\n      \n      .typing-dots span:nth-child(1) { animation-delay: -0.32s; }\n      .typing-dots span:nth-child(2) { animation-delay: -0.16s; }\n      \n      @keyframes typingBounce {\n        0%, 80%, 100% {\n          transform: scale(0.8);\n          opacity: 0.5;\n        }\n        40% {\n          transform: scale(1);\n          opacity: 1;\n        }\n      }\n      \n      .chat-input-form {\n        margin-top: 8px;\n      }\n      \n      .input-wrapper {\n        display: flex;\n        gap: 8px;\n        align-items: flex-end;\n      }\n      \n      .chat-input {\n        flex: 1;\n        padding: 12px 16px;\n        border: 2px solid var(--border);\n        border-radius: 12px;\n        background: var(--background);\n        color: var(--text-primary);\n        font-size: 14px;\n        outline: none;\n        transition: all 0.2s ease;\n        resize: none;\n        min-height: 44px;\n        max-height: 120px;\n        font-family: inherit;\n      }\n      \n      .chat-input:focus {\n        border-color: var(--primary-color);\n        box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n      }\n      \n      .chat-input::placeholder {\n        color: var(--text-secondary);\n      }\n      \n      .send-button {\n        width: 44px;\n        height: 44px;\n        border: none;\n        background: var(--primary-color);\n        color: white;\n        border-radius: 12px;\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        transition: all 0.2s ease;\n        flex-shrink: 0;\n      }\n      \n      .send-button:hover:not(:disabled) {\n        background: var(--primary-hover);\n        transform: scale(1.05);\n      }\n      \n      .send-button:disabled {\n        opacity: 0.6;\n        cursor: not-allowed;\n        transform: none;\n      }\n      \n      .send-icon {\n        width: 18px;\n        height: 18px;\n      }\n      \n      .rate-limit-warning {\n        margin-top: 8px;\n        padding: 8px 12px;\n        background: #fef2f2;\n        border: 1px solid #fecaca;\n        border-radius: 8px;\n        color: #dc2626;\n      }\n      \n      /* Mobile Responsive */\n      @media (max-width: 480px) {\n        .chat-window {\n          width: calc(100vw - 20px);\n          height: calc(100vh - 120px);\n          bottom: 10px;\n          left: 10px;\n          right: 10px;\n        }\n        \n        .chat-window.bottom-right,\n        .chat-window.bottom-left {\n          left: 10px;\n          right: 10px;\n        }\n        \n        .fab-container.bottom-right {\n          right: 20px;\n        }\n        \n        .fab-container.bottom-left {\n          left: 20px;\n        }\n      }\n      \n      /* Dark mode specific adjustments */\n      .whatsupdoc-widget[data-theme=\"dark\"] .message-content pre,\n      .whatsupdoc-widget[data-theme=\"dark\"] .message-content code {\n        background: rgba(255, 255, 255, 0.1);\n      }\n      \n      .whatsupdoc-widget[data-theme=\"dark\"] .rate-limit-warning {\n        background: #fef2f2;\n        border-color: #fecaca;\n        color: #dc2626;\n      }\n    `;\n  }\n  \n  setupEventListeners() {\n    const fabButton = this.shadowRoot.getElementById('fab-button');\n    const closeButton = this.shadowRoot.getElementById('close-button');\n    const chatForm = this.shadowRoot.getElementById('chat-form');\n    const chatInput = this.shadowRoot.getElementById('chat-input');\n    \n    // FAB button click\n    fabButton?.addEventListener('click', () => this.toggleChat());\n    \n    // Close button click\n    closeButton?.addEventListener('click', () => this.closeChat());\n    \n    // Form submission\n    chatForm?.addEventListener('submit', (e) => this.handleSubmit(e));\n    \n    // Enter key handling\n    chatInput?.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter' && !e.shiftKey) {\n        e.preventDefault();\n        this.handleSubmit(e);\n      }\n    });\n    \n    // Click outside to close (optional)\n    document.addEventListener('click', (e) => {\n      if (this.isOpen && !this.contains(e.target)) {\n        // Optional: close on outside click\n        // this.closeChat();\n      }\n    });\n  }\n  \n  toggleChat() {\n    if (this.isOpen) {\n      this.closeChat();\n    } else {\n      this.openChat();\n    }\n  }\n  \n  openChat() {\n    const chatWindow = this.shadowRoot.getElementById('chat-window');\n    const fabButton = this.shadowRoot.getElementById('fab-button');\n    const chatInput = this.shadowRoot.getElementById('chat-input');\n    \n    chatWindow.style.display = 'flex';\n    fabButton.classList.add('open');\n    this.isOpen = true;\n    \n    // Focus input after animation\n    setTimeout(() => {\n      chatInput?.focus();\n    }, 300);\n    \n    // Hide badge\n    this.hideBadge();\n  }\n  \n  closeChat() {\n    const chatWindow = this.shadowRoot.getElementById('chat-window');\n    const fabButton = this.shadowRoot.getElementById('fab-button');\n    \n    chatWindow.style.display = 'none';\n    fabButton.classList.remove('open');\n    this.isOpen = false;\n  }\n  \n  async handleSubmit(e) {\n    e.preventDefault();\n    \n    if (this.isLoading) return;\n    \n    const chatInput = this.shadowRoot.getElementById('chat-input');\n    const message = chatInput.value.trim();\n    \n    if (!message) return;\n    \n    // Add user message\n    this.addMessage(message, 'user');\n    \n    // Clear input\n    chatInput.value = '';\n    \n    // Show loading state\n    this.setLoading(true);\n    \n    try {\n      // Send message to API\n      const response = await this.sendMessage(message);\n      \n      // Add bot response\n      this.addMessage(response.answer, 'bot', {\n        sources: response.sources,\n        confidence: response.confidence,\n        responseTime: response.response_time_ms\n      });\n      \n    } catch (error) {\n      console.error('Chat error:', error);\n      \n      // Add error message\n      this.addMessage(\n        'Sorry, I encountered an error processing your request. Please try again.',\n        'bot',\n        { isError: true }\n      );\n      \n      // Handle rate limiting\n      if (error.status === 429) {\n        this.showRateLimit();\n      }\n    } finally {\n      this.setLoading(false);\n    }\n  }\n  \n  async sendMessage(message) {\n    // Validate API URL before making request\n    if (!this.config.apiUrl) {\n      throw new Error('No API URL configured. Please set data-api-url attribute.');\n    }\n    \n    if (this.config.apiUrl.includes('storage.googleapis.com')) {\n      throw new Error('Invalid API URL: Cannot use storage.googleapis.com as an API endpoint. Please check your data-api-url configuration.');\n    }\n    \n    const apiEndpoint = `${this.config.apiUrl}/api/chat`;\n    console.log('Sending message to API endpoint:', apiEndpoint);\n    \n    const response = await fetch(apiEndpoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Widget-Origin': window.location.origin,\n        'X-Widget-URL': window.location.href,\n        'X-Widget-Version': '1.0.0'\n      },\n      body: JSON.stringify({\n        query: message,\n        conversation_id: this.conversationId,\n        max_results: 5,\n        confidence_threshold: 0.5\n      })\n    });\n    \n    if (!response.ok) {\n      const error = new Error(`HTTP ${response.status}`);\n      error.status = response.status;\n      \n      // Enhanced error messages for common issues\n      if (response.status === 404) {\n        error.message = `API endpoint not found (404). Check if ${apiEndpoint} is correct.`;\n      } else if (response.status === 403) {\n        error.message = `Access forbidden (403). Check API permissions for ${this.config.apiUrl}`;\n      } else if (response.status === 400) {\n        error.message = `Bad request (400). The API rejected the request to ${apiEndpoint}`;\n      }\n      \n      throw error;\n    }\n    \n    return await response.json();\n  }\n  \n  addMessage(content, type, metadata = {}) {\n    const messagesContainer = this.shadowRoot.getElementById('chat-messages');\n    const messageElement = document.createElement('div');\n    messageElement.className = `message ${type}-message`;\n    \n    const timestamp = new Date().toLocaleTimeString([], { \n      hour: '2-digit', \n      minute: '2-digit' \n    });\n    \n    let sourcesHTML = '';\n    if (metadata.sources && metadata.sources.length > 0) {\n      sourcesHTML = `\n        <div class=\"message-sources\">\n          <strong>Sources:</strong>\n          ${metadata.sources.map(source => \n            `<a href=\"#\" class=\"source-link\">${source}</a>`\n          ).join('')}\n        </div>\n      `;\n    }\n    \n    messageElement.innerHTML = `\n      <div class=\"message-avatar\">\n        ${type === 'user' ? 'U' : 'AI'}\n      </div>\n      <div class=\"message-content\">\n        <p>${this.formatMessage(content)}</p>\n        ${sourcesHTML}\n        <div class=\"message-timestamp\">${timestamp}</div>\n      </div>\n    `;\n    \n    messagesContainer.appendChild(messageElement);\n    \n    // Auto scroll to bottom\n    this.scrollToBottom();\n    \n    // Save to conversation history\n    this.messages.push({\n      content,\n      type,\n      timestamp: Date.now(),\n      metadata\n    });\n    \n    this.saveConversationHistory();\n  }\n  \n  formatMessage(content) {\n    // Basic markdown-like formatting\n    return content\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n      .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\n      .replace(/`(.*?)`/g, '<code>$1</code>')\n      .replace(/\\n/g, '<br>');\n  }\n  \n  setLoading(loading) {\n    this.isLoading = loading;\n    \n    const typingIndicator = this.shadowRoot.getElementById('typing-indicator');\n    const sendButton = this.shadowRoot.getElementById('send-button');\n    const chatStatus = this.shadowRoot.getElementById('chat-status');\n    \n    if (loading) {\n      typingIndicator.style.display = 'flex';\n      sendButton.disabled = true;\n      chatStatus.textContent = 'Thinking...';\n    } else {\n      typingIndicator.style.display = 'none';\n      sendButton.disabled = false;\n      chatStatus.textContent = 'Ready';\n    }\n  }\n  \n  showRateLimit() {\n    const warning = this.shadowRoot.getElementById('rate-limit-warning');\n    warning.style.display = 'block';\n    \n    setTimeout(() => {\n      warning.style.display = 'none';\n    }, 5000);\n  }\n  \n  scrollToBottom() {\n    const messagesContainer = this.shadowRoot.getElementById('chat-messages');\n    messagesContainer.scrollTop = messagesContainer.scrollHeight;\n  }\n  \n  showBadge(count = 1) {\n    const badge = this.shadowRoot.getElementById('fab-badge');\n    badge.textContent = count;\n    badge.style.display = 'block';\n  }\n  \n  hideBadge() {\n    const badge = this.shadowRoot.getElementById('fab-badge');\n    badge.style.display = 'none';\n  }\n  \n  saveConversationHistory() {\n    try {\n      localStorage.setItem(\n        `whatsupdoc-conversation-${this.conversationId}`, \n        JSON.stringify({\n          messages: this.messages,\n          timestamp: Date.now()\n        })\n      );\n    } catch (error) {\n      console.warn('Could not save conversation history:', error);\n    }\n  }\n  \n  loadConversationHistory() {\n    try {\n      const saved = localStorage.getItem(`whatsupdoc-conversation-${this.conversationId}`);\n      if (saved) {\n        const data = JSON.parse(saved);\n        \n        // Only load if less than 24 hours old\n        if (Date.now() - data.timestamp < 24 * 60 * 60 * 1000) {\n          this.messages = data.messages || [];\n          \n          // Restore messages to UI\n          data.messages?.forEach(msg => {\n            if (msg.type !== 'system') {\n              this.addMessageToUI(msg.content, msg.type, msg.metadata);\n            }\n          });\n        }\n      }\n    } catch (error) {\n      console.warn('Could not load conversation history:', error);\n    }\n  }\n  \n  addMessageToUI(content, type, metadata = {}) {\n    // Similar to addMessage but without saving to history\n    const messagesContainer = this.shadowRoot.getElementById('chat-messages');\n    const messageElement = document.createElement('div');\n    messageElement.className = `message ${type}-message`;\n    \n    // Include sources if available in metadata\n    let sourcesHTML = '';\n    if (metadata.sources && metadata.sources.length > 0) {\n      sourcesHTML = `\n        <div class=\"message-sources\">\n          <strong>Sources:</strong>\n          ${metadata.sources.map(source => \n            `<a href=\"#\" class=\"source-link\">${source}</a>`\n          ).join('')}\n        </div>\n      `;\n    }\n    \n    messageElement.innerHTML = `\n      <div class=\"message-avatar\">\n        ${type === 'user' ? 'U' : 'AI'}\n      </div>\n      <div class=\"message-content\">\n        <p>${this.formatMessage(content)}</p>\n        ${sourcesHTML}\n      </div>\n    `;\n    \n    messagesContainer.appendChild(messageElement);\n  }\n  \n  cleanup() {\n    // Cleanup when widget is removed\n    this.saveConversationHistory();\n  }\n  \n  // Utility functions\n  generateUUID() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      const r = Math.random() * 16 | 0;\n      const v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n  \n  adjustColor(hex, percent) {\n    // Simple color adjustment utility\n    const num = parseInt(hex.replace('#', ''), 16);\n    const amt = Math.round(2.55 * percent);\n    const R = (num >> 16) + amt;\n    const G = (num >> 8 & 0x00FF) + amt;\n    const B = (num & 0x0000FF) + amt;\n    return '#' + (0x1000000 + (R < 255 ? R < 1 ? 0 : R : 255) * 0x10000 +\n      (G < 255 ? G < 1 ? 0 : G : 255) * 0x100 +\n      (B < 255 ? B < 1 ? 0 : B : 255))\n      .toString(16).slice(1);\n  }\n}\n\n// Register the custom element\nif (!customElements.get('whatsupdoc-widget')) {\n  customElements.define('whatsupdoc-widget', WhatsUpDocWidget);\n}\n\n// Auto-initialize function\nfunction initializeWidget() {\n  const widgetContainer = document.getElementById('whatsupdoc-widget');\n  // Check for actual element children, not just text nodes\n  const hasWidgetElement = widgetContainer && widgetContainer.querySelector('whatsupdoc-widget');\n  \n  if (widgetContainer && !hasWidgetElement) {\n    console.log('Initializing WhatsUpDoc widget...');\n    console.log('Container element attributes:', Array.from(widgetContainer.attributes).map(attr => ({ name: attr.name, value: attr.value })));\n    \n    const widget = document.createElement('whatsupdoc-widget');\n    \n    // Copy data attributes with detailed logging\n    const copiedAttrs = [];\n    Array.from(widgetContainer.attributes).forEach(attr => {\n      if (attr.name.startsWith('data-')) {\n        widget.setAttribute(attr.name, attr.value);\n        copiedAttrs.push({ name: attr.name, value: attr.value });\n        console.log(`Copied attribute: ${attr.name} = \"${attr.value}\"`);\n      }\n    });\n    \n    console.log('Attributes copied to widget:', copiedAttrs);\n    \n    // Ensure attributes are set before adding to DOM\n    // Use a slight delay to ensure the custom element definition is ready\n    setTimeout(() => {\n      widgetContainer.appendChild(widget);\n      console.log('WhatsUpDoc widget added to DOM');\n      \n      // Double-check attributes after DOM insertion\n      setTimeout(() => {\n        console.log('Widget attributes after DOM insertion:', Array.from(widget.attributes).map(attr => ({ name: attr.name, value: attr.value })));\n      }, 10);\n    }, 10);\n    \n    console.log('WhatsUpDoc widget initialized successfully');\n  }\n}\n\n\n// Auto-initialize if a div with the ID exists\nif (document.readyState === 'loading') {\n  // DOM not yet loaded, wait for DOMContentLoaded\n  document.addEventListener('DOMContentLoaded', initializeWidget);\n} else {\n  // DOM already loaded, initialize immediately\n  initializeWidget();\n}\n\n// Export for module systems\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = WhatsUpDocWidget;\n}"],"names":["WhatsUpDocWidget","HTMLElement","constructor","super","this","attachShadow","mode","isOpen","isLoading","conversationId","generateUUID","messages","config","connectedCallback","loadConfig","init","console","log","Array","from","attributes","map","attr","name","value","getAttribute","window","location","origin","apiUrl","theme","position","title","placeholder","primaryColor","container","document","getElementById","getDefaultApiUrl","error","Error","hostname","includes","warn","disconnectedCallback","cleanup","shadowRoot","innerHTML","getHTML","applyStyles","setTimeout","setupEventListeners","loadConversationHistory","showInitializationError","style","createElement","textContent","getCSS","appendChild","adjustColor","fabButton","closeButton","chatForm","chatInput","addEventListener","toggleChat","closeChat","e","handleSubmit","key","shiftKey","preventDefault","contains","target","openChat","chatWindow","display","classList","add","focus","hideBadge","remove","message","trim","addMessage","setLoading","response","sendMessage","answer","sources","confidence","responseTime","response_time_ms","isError","status","showRateLimit","apiEndpoint","fetch","method","headers","href","body","JSON","stringify","query","conversation_id","max_results","confidence_threshold","ok","json","content","type","metadata","messagesContainer","messageElement","className","timestamp","Date","toLocaleTimeString","hour","minute","sourcesHTML","length","source","join","formatMessage","scrollToBottom","push","now","saveConversationHistory","replace","loading","typingIndicator","sendButton","chatStatus","disabled","warning","scrollTop","scrollHeight","showBadge","count","badge","localStorage","setItem","saved","getItem","data","parse","_a","forEach","msg","addMessageToUI","c","r","Math","random","toString","hex","percent","num","parseInt","amt","round","R","G","B","slice","initializeWidget","widgetContainer","hasWidgetElement","querySelector","widget","copiedAttrs","startsWith","setAttribute","customElements","get","define","readyState","module","exports"],"mappings":"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"}